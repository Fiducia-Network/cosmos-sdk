{
  "swagger": "2.0",
  "info": {
    "title": "ibc/transfer/query.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/ibc_transfer/v1beta1/denom_traces": {
      "get": {
        "summary": "DenomTraces queries all denomination traces.",
        "operationId": "Query_DenomTraces",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/transferQueryDenomTracesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs. count_total\nis only respected when offset is used. It is ignored when key is set.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc_transfer/v1beta1/denom_traces/{hash}": {
      "get": {
        "summary": "DenomTrace queries a denomination trace information.",
        "operationId": "Query_DenomTrace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/transferQueryDenomTraceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "description": "hash (in hex format) of the denomination trace information.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/ibc_transfer/v1beta1/params": {
      "get": {
        "summary": "Params queries all parameters of the ibc-transfer module.",
        "operationId": "Query_Params",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/transferQueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "transferDenomTrace": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "path defines the chain of port/channel identifiers used for tracing the source of the fungible\ntoken."
        },
        "base_denom": {
          "type": "string",
          "description": "base denomination of the relayed fungible token."
        }
      },
      "description": "DenomTrace contains the base denomination for ICS20 fungible tokens and the source tracing\ninformation path."
    },
    "transferParams": {
      "type": "object",
      "properties": {
        "send_enabled": {
          "type": "boolean",
          "format": "boolean",
          "description": "send_enabled enables or disables all cross-chain token transfers from this chain."
        },
        "receive_enabled": {
          "type": "boolean",
          "format": "boolean",
          "description": "receive_enabled enables or disables all cross-chain token transfers to this chain."
        }
      },
      "description": "Params defines the set of IBC transfer parameters.\nNOTE: To prevent a single token from being transferred, set the TransfersEnabled parameter to\ntrue and then set the bank module's SendEnabled parameter for the denomination to false."
    },
    "transferQueryDenomTraceResponse": {
      "type": "object",
      "properties": {
        "denom_trace": {
          "$ref": "#/definitions/transferDenomTrace",
          "description": "denom_trace returns the requested denomination trace information."
        }
      },
      "description": "QueryDenomTraceResponse is the response type for the Query/DenomTrace RPC method."
    },
    "transferQueryDenomTracesResponse": {
      "type": "object",
      "properties": {
        "denom_traces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/transferDenomTrace"
          },
          "description": "denom_traces returns all denominations trace information."
        },
        "pagination": {
          "$ref": "#/definitions/v1beta1PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryConnectionsResponse is the response type for the Query/DenomTraces RPC method."
    },
    "transferQueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/transferParams",
          "description": "params defines the parameters of the module."
        }
      },
      "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
    },
    "v1beta1PageRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte",
          "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set."
        },
        "offset": {
          "type": "string",
          "format": "uint64",
          "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set."
        },
        "limit": {
          "type": "string",
          "format": "uint64",
          "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app."
        },
        "count_total": {
          "type": "boolean",
          "format": "boolean",
          "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs. count_total\nis only respected when offset is used. It is ignored when key is set."
        }
      },
      "description": "message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }",
      "title": "PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:"
    },
    "v1beta1PageResponse": {
      "type": "object",
      "properties": {
        "next_key": {
          "type": "string",
          "format": "byte",
          "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently"
        },
        "total": {
          "type": "string",
          "format": "uint64",
          "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"
        }
      },
      "description": "message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }",
      "title": "PageResponse is to be embedded in gRPC response messages where the corresponding\nrequest message has used PageRequest"
    }
  }
}
