{
  "swagger": "2.0",
  "info": {
    "title": "cosmos/gov/v1beta1/query.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/cosmos/gov/v1beta1/params/{params_type}": {
      "get": {
        "summary": "Params queries all parameters of the gov module.",
        "operationId": "Query_Params",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "params_type",
            "description": "params_type defines which parameters to query for, can be one of \"voting\", \"tallying\" or \"deposit\".",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1beta1/proposals": {
      "get": {
        "summary": "Proposals queries all proposals based on given status.",
        "operationId": "Query_Proposals",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1QueryProposalsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_status",
            "description": "proposal_status defines the status of the proposals.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit period.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting period.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has passed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has been rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has failed.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PROPOSAL_STATUS_UNSPECIFIED",
              "PROPOSAL_STATUS_DEPOSIT_PERIOD",
              "PROPOSAL_STATUS_VOTING_PERIOD",
              "PROPOSAL_STATUS_PASSED",
              "PROPOSAL_STATUS_REJECTED",
              "PROPOSAL_STATUS_FAILED"
            ],
            "default": "PROPOSAL_STATUS_UNSPECIFIED"
          },
          {
            "name": "voter",
            "description": "voter defines the voter address for the proposals.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "depositor",
            "description": "depositor defines the deposit addresses from the proposals.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs. count_total\nis only respected when offset is used. It is ignored when key is set.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1beta1/proposals/{proposal_id}": {
      "get": {
        "summary": "Proposal queries proposal details based on ProposalID.",
        "operationId": "Query_Proposal",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1QueryProposalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits": {
      "get": {
        "summary": "Deposits queries all deposits of a single proposal.",
        "operationId": "Query_Deposits",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1QueryDepositsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs. count_total\nis only respected when offset is used. It is ignored when key is set.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}": {
      "get": {
        "summary": "Deposit queries single deposit information based proposalID, depositAddr.",
        "operationId": "Query_Deposit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1QueryDepositResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "depositor",
            "description": "depositor defines the deposit addresses from the proposals.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1beta1/proposals/{proposal_id}/tally": {
      "get": {
        "summary": "TallyResult queries the tally of a proposal vote.",
        "operationId": "Query_TallyResult",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1QueryTallyResultResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1beta1/proposals/{proposal_id}/votes": {
      "get": {
        "summary": "Votes queries votes of a given proposal.",
        "operationId": "Query_Votes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1QueryVotesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs. count_total\nis only respected when offset is used. It is ignored when key is set.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1beta1/proposals/{proposal_id}/votes/{voter}": {
      "get": {
        "summary": "Vote queries voted information based on proposalID, voterAddr.",
        "operationId": "Query_Vote",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1QueryVoteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "voter",
            "description": "voter defines the oter address for the proposals.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1beta1Coin": {
      "type": "object",
      "properties": {
        "denom": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      },
      "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
    },
    "v1beta1Deposit": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string",
          "format": "uint64"
        },
        "depositor": {
          "type": "string",
          "format": "byte"
        },
        "amount": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Coin"
          }
        }
      },
      "title": "Deposit defines an amount deposited by an account address to an active proposal"
    },
    "v1beta1DepositParams": {
      "type": "object",
      "properties": {
        "min_deposit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Coin"
          },
          "description": "Minimum deposit for a proposal to enter voting period."
        },
        "max_deposit_period": {
          "type": "string",
          "description": "Maximum period for Atom holders to deposit on a proposal. Initial value: 2 months."
        }
      },
      "title": "DepositParams defines the params around deposits for governance"
    },
    "v1beta1PageRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte",
          "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set."
        },
        "offset": {
          "type": "string",
          "format": "uint64",
          "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set."
        },
        "limit": {
          "type": "string",
          "format": "uint64",
          "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app."
        },
        "count_total": {
          "type": "boolean",
          "format": "boolean",
          "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs. count_total\nis only respected when offset is used. It is ignored when key is set."
        }
      },
      "description": "message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }",
      "title": "PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:"
    },
    "v1beta1PageResponse": {
      "type": "object",
      "properties": {
        "next_key": {
          "type": "string",
          "format": "byte",
          "title": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently"
        },
        "total": {
          "type": "string",
          "format": "uint64",
          "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"
        }
      },
      "description": "message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }",
      "title": "PageResponse is to be embedded in gRPC response messages where the corresponding\nrequest message has used PageRequest"
    },
    "v1beta1Proposal": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string",
          "format": "uint64"
        },
        "content": {
          "$ref": "#/definitions/protobufAny"
        },
        "status": {
          "$ref": "#/definitions/v1beta1ProposalStatus"
        },
        "final_tally_result": {
          "$ref": "#/definitions/v1beta1TallyResult"
        },
        "submit_time": {
          "type": "string",
          "format": "date-time"
        },
        "deposit_end_time": {
          "type": "string",
          "format": "date-time"
        },
        "total_deposit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Coin"
          }
        },
        "voting_start_time": {
          "type": "string",
          "format": "date-time"
        },
        "voting_end_time": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Proposal defines the core field members of a governance proposal"
    },
    "v1beta1ProposalStatus": {
      "type": "string",
      "enum": [
        "PROPOSAL_STATUS_UNSPECIFIED",
        "PROPOSAL_STATUS_DEPOSIT_PERIOD",
        "PROPOSAL_STATUS_VOTING_PERIOD",
        "PROPOSAL_STATUS_PASSED",
        "PROPOSAL_STATUS_REJECTED",
        "PROPOSAL_STATUS_FAILED"
      ],
      "default": "PROPOSAL_STATUS_UNSPECIFIED",
      "description": "- PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit period.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting period.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has passed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has been rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has failed.",
      "title": "ProposalStatus is a type alias that represents a proposal status as a byte"
    },
    "v1beta1QueryDepositResponse": {
      "type": "object",
      "properties": {
        "deposit": {
          "$ref": "#/definitions/v1beta1Deposit",
          "description": "deposit defines the requested deposit."
        }
      },
      "description": "QueryDepositResponse is the response type for the Query/Deposit RPC method."
    },
    "v1beta1QueryDepositsResponse": {
      "type": "object",
      "properties": {
        "deposits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Deposit"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1beta1PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryDepositsResponse is the response type for the Query/Deposits RPC method."
    },
    "v1beta1QueryParamsResponse": {
      "type": "object",
      "properties": {
        "voting_params": {
          "$ref": "#/definitions/v1beta1VotingParams",
          "description": "voting_params defines the parameters related to voting."
        },
        "deposit_params": {
          "$ref": "#/definitions/v1beta1DepositParams",
          "description": "deposit_params defines the parameters related to deposit."
        },
        "tally_params": {
          "$ref": "#/definitions/v1beta1TallyParams",
          "description": "tally_params defines the parameters related to tally."
        }
      },
      "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
    },
    "v1beta1QueryProposalResponse": {
      "type": "object",
      "properties": {
        "proposal": {
          "$ref": "#/definitions/v1beta1Proposal"
        }
      },
      "description": "QueryProposalResponse is the response type for the Query/Proposal RPC method."
    },
    "v1beta1QueryProposalsResponse": {
      "type": "object",
      "properties": {
        "proposals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Proposal"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1beta1PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryProposalsResponse is the response type for the Query/Proposals RPC method."
    },
    "v1beta1QueryTallyResultResponse": {
      "type": "object",
      "properties": {
        "tally": {
          "$ref": "#/definitions/v1beta1TallyResult",
          "description": "tally defines the requested tally."
        }
      },
      "description": "QueryTallyResultResponse is the response type for the Query/Tally RPC method."
    },
    "v1beta1QueryVoteResponse": {
      "type": "object",
      "properties": {
        "vote": {
          "$ref": "#/definitions/v1beta1Vote",
          "description": "vote defined the queried vote."
        }
      },
      "description": "QueryVoteResponse is the response type for the Query/Vote RPC method."
    },
    "v1beta1QueryVotesResponse": {
      "type": "object",
      "properties": {
        "votes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Vote"
          },
          "description": "votes defined the queried votes."
        },
        "pagination": {
          "$ref": "#/definitions/v1beta1PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryVotesResponse is the response type for the Query/Votes RPC method."
    },
    "v1beta1TallyParams": {
      "type": "object",
      "properties": {
        "quorum": {
          "type": "string",
          "format": "byte",
          "description": "Minimum percentage of total stake needed to vote for a result to be considered valid."
        },
        "threshold": {
          "type": "string",
          "format": "byte",
          "description": "Minimum proportion of Yes votes for proposal to pass. Initial value: 0.5."
        },
        "veto": {
          "type": "string",
          "format": "byte",
          "description": "Minimum value of Veto votes to Total votes ratio for proposal to be vetoed. Initial value: 1/3."
        }
      },
      "title": "TallyParams defines the params around Tallying votes in governance"
    },
    "v1beta1TallyResult": {
      "type": "object",
      "properties": {
        "yes": {
          "type": "string"
        },
        "abstain": {
          "type": "string"
        },
        "no": {
          "type": "string"
        },
        "no_with_veto": {
          "type": "string"
        }
      },
      "title": "TallyResult defines a standard tally for a proposal"
    },
    "v1beta1Vote": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string",
          "format": "uint64"
        },
        "voter": {
          "type": "string",
          "format": "byte"
        },
        "option": {
          "$ref": "#/definitions/v1beta1VoteOption"
        }
      },
      "description": "Vote defines a vote on a governance proposal. A vote corresponds to a proposal\nID, the voter, and the vote option."
    },
    "v1beta1VoteOption": {
      "type": "string",
      "enum": [
        "VOTE_OPTION_UNSPECIFIED",
        "VOTE_OPTION_YES",
        "VOTE_OPTION_ABSTAIN",
        "VOTE_OPTION_NO",
        "VOTE_OPTION_NO_WITH_VETO"
      ],
      "default": "VOTE_OPTION_UNSPECIFIED",
      "description": "- VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.",
      "title": "VoteOption defines a vote option"
    },
    "v1beta1VotingParams": {
      "type": "object",
      "properties": {
        "voting_period": {
          "type": "string",
          "description": "Length of the voting period."
        }
      },
      "title": "VotingParams defines the params around Voting in governance"
    }
  }
}
